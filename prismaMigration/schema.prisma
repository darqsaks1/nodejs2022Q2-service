generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid()) @map("user_id")
  login String @db.VarChar(256)
  password String @db.VarChar(256)
  version Int @default(1)
  createdAt DateTime @default(now()) @db.Timestamptz(3) @map("created_at")
  updatedAt DateTime @updatedAt @db.Timestamptz(3) @map("updated_at")
  refreshToken String? @db.VarChar(256) @map("refresh_token")

  @@map("users")
}

model Artist {
  id String @id @default(uuid()) @map("artist_id")
  name String @db.VarChar(256)
  grammy Boolean
  albums Album[]
  tracks Track[]
  favs Favorite? @relation(fields: [favoriteId], references: [id])
  favoriteId String?

  @@map("artists")
}

model Album {
  id String @id @default(uuid()) @map("album_id")
  name String @db.VarChar(256)
  year Int
  artist Artist? @relation(fields: [artistId], references: [id])
  artistId String?
  tracks Track[]
  favs Favorite? @relation(fields: [favoriteId], references: [id])
  favoriteId String?

  @@map("albums")
}

model Track {
  id String @id @default(uuid()) @map("track_id")
  name String @db.VarChar(256)
  duration Int
  artist Artist? @relation(fields: [artistId], references: [id])
  artistId String?
  albums Album? @relation(fields: [albumId], references: [id])
  albumId String?
  favs Favorite? @relation(fields: [favoriteId], references: [id])
  favoriteId String?

  @@map("tracks")
}

model Favorite {
  id String @id @default(uuid())
  artists Artist[]
  albums Album[]
  tracks Track[]

  @@map("favorite")
}
